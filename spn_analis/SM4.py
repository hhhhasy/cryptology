import numpy as np
import pandas as pd
s_box = {
    "00": "d6", "01": "90", "02": "e9", "03": "fe", "04": "cc", "05": "e1", "06": "3d", "07": "b7",
    "08": "16", "09": "b6", "0a": "14", "0b": "c2", "0c": "28", "0d": "fb", "0e": "2c", "0f": "05",
    "10": "2b", "11": "67", "12": "9a", "13": "76", "14": "2a", "15": "be", "16": "04", "17": "c3",
    "18": "aa", "19": "44", "1a": "13", "1b": "26", "1c": "49", "1d": "86", "1e": "06", "1f": "99",
    "20": "9c", "21": "42", "22": "50", "23": "f4", "24": "91", "25": "ef", "26": "98", "27": "7a",
    "28": "33", "29": "54", "2a": "0b", "2b": "43", "2c": "ed", "2d": "cf", "2e": "ac", "2f": "62",
    "30": "e4", "31": "b3", "32": "1c", "33": "a9", "34": "c9", "35": "08", "36": "e8", "37": "95",
    "38": "80", "39": "df", "3a": "94", "3b": "fa", "3c": "75", "3d": "8f", "3e": "3f", "3f": "a6",
    "40": "47", "41": "07", "42": "a7", "43": "fc", "44": "f3", "45": "73", "46": "17", "47": "ba",
    "48": "83", "49": "59", "4a": "3c", "4b": "19", "4c": "e6", "4d": "85", "4e": "4f", "4f": "a8",
    "50": "68", "51": "6b", "52": "81", "53": "b2", "54": "71", "55": "64", "56": "da", "57": "8b",
    "58": "f8", "59": "eb", "5a": "0f", "5b": "4b", "5c": "70", "5d": "56", "5e": "9d", "5f": "35",
    "60": "1e", "61": "24", "62": "0e", "63": "5e", "64": "63", "65": "58", "66": "d1", "67": "a2",
    "68": "25", "69": "22", "6a": "7c", "6b": "3b", "6c": "01", "6d": "21", "6e": "78", "6f": "87",
    "70": "d4", "71": "00", "72": "46", "73": "57", "74": "9f", "75": "d3", "76": "27", "77": "52",
    "78": "4c", "79": "36", "7a": "02", "7b": "e7", "7c": "a0", "7d": "c4", "7e": "c8", "7f": "9e",
    "80": "ea", "81": "bf", "82": "8a", "83": "d2", "84": "40", "85": "c7", "86": "38", "87": "b5",
    "88": "a3", "89": "f7", "8a": "f2", "8b": "ce", "8c": "f9", "8d": "61", "8e": "15", "8f": "a1",
    "90": "e0", "91": "ae", "92": "5d", "93": "a4", "94": "9b", "95": "34", "96": "1a", "97": "55",
    "98": "ad", "99": "93", "9a": "32", "9b": "30", "9c": "f5", "9d": "8c", "9e": "b1", "9f": "e3",
    "a0": "1d", "a1": "f6", "a2": "e2", "a3": "2e", "a4": "82", "a5": "66", "a6": "ca", "a7": "60",
    "a8": "c0", "a9": "29", "aa": "23", "ab": "ab", "ac": "0d", "ad": "53", "ae": "4e", "af": "6f",
    "b0": "d5", "b1": "db", "b2": "37", "b3": "45", "b4": "de", "b5": "fd", "b6": "8e", "b7": "2f",
    "b8": "03", "b9": "ff", "ba": "6a", "bb": "72", "bc": "6d", "bd": "6c", "be": "5b", "bf": "51",
    "c0": "8d", "c1": "1b", "c2": "af", "c3": "92", "c4": "bb", "c5": "dd", "c6": "bc", "c7": "7f",
    "c8": "11", "c9": "d9","ca": "5c", "cb": "41", "cc": "1f", "cd": "10", "ce": "5a", "cf": "d8",
    "d0": "0a", "d1": "c1", "d2": "31", "d3": "88", "d4": "a5", "d5": "cd","d6": "7b", "d7": "bd",
    "d8": "2d", "d9": "74", "da": "d0", "db": "12","dc": "b8", "dd": "e5", "de": "b4", "df": "b0",
    "e0": "89", "e1": "69", "e2": "97", "e3": "4a", "e4": "0c", "e5": "96","e6": "77", "e7": "7e",
    "e8": "65", "e9": "b9", "ea": "f1", "eb": "09","ec": "c5", "ed": "6e", "ee": "c6", "ef": "84",
    "f0": "18", "f1": "f0", "f2": "7d", "f3": "ec", "f4": "3a", "f5": "dc","f6": "4d", "f7": "20",
    "f8": "79", "f9": "ee", "fa": "5f", "fb": "3e","fc": "d7", "fd": "cb", "fe": "39", "ff": "48"
}

def hex_to_8bit_binary(hex_str):
    # 将十六进制字符串转换为整数
    decimal_value = int(hex_str, 16)
    # 检查整数是否在0到255的范围内
    if decimal_value < 0 or decimal_value > 255:
        raise ValueError("十六进制数必须在0到255的范围内")
    # 将整数转换为8位的二进制字符串，并去掉前缀'0b'
    binary_str = bin(decimal_value)[2:].zfill(8)
    return binary_str


def decimal_to_8bit_binary(decimal_number):
    # 使用bin()函数将十进制数转换为二进制，并去掉前缀'0b'
    binary_str = bin(decimal_number)[2:]

    # 如果二进制字符串不足8位，则在前面补零
    binary_str = binary_str.zfill(8)

    return binary_str


def binary_to_hex(binary_str):
    # 检查输入的二进制字符串是否是8位长
    if len(binary_str) != 8:
        raise ValueError("输入的二进制字符串必须是8位长")

    # 将二进制字符串转换为整数
    decimal_value = int(binary_str, 2)

    # 将整数转换为十六进制，并确保结果是两位数
    hex_value = format(decimal_value, '02x')

    return hex_value

#计数数组也是差分分布表
dec_table = np.zeros((256, 256), dtype=int)

#计算函数
def cal_delta(delta_x):

    for x in range(256):
        x=decimal_to_8bit_binary(x) #把十进制整数转换成八位二进制字符串
        x_ = ''.join('1' if a != b else '0' for a, b in zip(delta_x, x)) #x和x`做异或运算得到x*
        x=binary_to_hex(x)   #把八位二进制字符串转化成两位十六进制字符串
        x_=binary_to_hex(x_) #把八位二进制字符串转化成两位十六进制字符串
        y=hex_to_8bit_binary(s_box[x]) #取出y
        y_=hex_to_8bit_binary(s_box[x_]) #取出y`
        y_result = int(''.join('1' if a != b else '0' for a, b in zip(y,y_)),2) #计算y*
        x_result = int(delta_x, 2) #转换成十进制
        dec_table[x_result][y_result] += 1 #计数器加一


for i in range(256):
    i=decimal_to_8bit_binary(i) #把十进制整数转换成八位二进制字符串
    cal_delta(i)


np.set_printoptions(threshold=np.inf)

df = pd.DataFrame(dec_table)

# 设置行和列的索引名称
df.index = [f'{i:02x}' for i in range(256)]
df.columns = [f'{i:02x}' for i in range(256)]
#保存表格
df.to_excel('output.xlsx', index=True, header=True)
# 打印表格
print(df.to_string())








